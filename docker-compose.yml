version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  poke_consumer_stats:
    container_name: poke_consumer_stats
    build:
      context: ./poke_consumer_stats
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=poke_topic
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - 8001:8001
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - publisher
    networks:
      - broker-kafka

  poke_consumer_types:
    container_name: poke_consumer_types
    build:
      context: ./poke_consumer_types
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=poke_types
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - 8002:8002
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - publisher
    networks:
      - broker-kafka

  publisher:
    container_name: publisher
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=poke_topic
      - KAFKA_TOPIC_NAME_2=poke_types
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - 8000:8000
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - broker-kafka
  

  front:
    container_name: react
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: "always"
    networks:
      - broker-kafka
    environment:
      NODE_ENV: production


networks:
  broker-kafka:
    driver: bridge
